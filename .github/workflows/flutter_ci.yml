name: Test and Build Flutter

on:
  push:
  pull_request:

permissions: read-all

jobs:
  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    outputs:
      flutter-version: ${{ steps.read_fvm_config.outputs.flutter-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Flutter Version
        id: read_fvm_config
        run: |
          FLUTTER_VERSION=$(cat .fvmrc | jq -r '.flutter')
          echo "flutter-version=$FLUTTER_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.read_fvm_config.outputs.flutter-version }}
          cache: true

      - name: Install packages
        run: flutter pub get

      - name: Run build-runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Setup env for tests
        run: cp .env.dev .env

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          flags: unittests
          verbose: true

  build-ubuntu:
    name: Build
    runs-on: ubuntu-latest
    needs: unit-test
    strategy:
      matrix:
        target: [apk --profile, appbundle --debug]
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.unit-test.outputs.flutter-version }}
          cache: true

      - name: Install packages
        run: flutter pub get

      - name: Run build-runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Update local.properties
        run: |
          if [ -f android/local.properties ]; then
            cp android/local.properties android/local.properties.tmp
            grep flutter android/local.properties.tmp > android/local.properties || echo "" > android/local.properties
          else
            echo "" > android/local.properties
          fi
          echo "sdk.dir=$ANDROID_SDK_PATH" >> android/local.properties          

      - name: Configure Keystore
        run: |
          echo "debugStoreFile=keystore/debug_keystore" >> android/key.properties
          echo "debugKeyAlias=$KEYSTORE_KEY_ALIAS" >> android/key.properties
          echo "debugStorePassword=$KEYSTORE_STORE_PASSWORD" >> android/key.properties
          echo "debugKeyPassword=$KEYSTORE_KEY_PASSWORD" >> android/key.properties
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.DEBUG_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.DEBUG_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.DEBUG_KEYSTORE_PASSWORD }}

      - name: Prepare env file
        run: cp .env.dev .env

      - name: Build ${{ matrix.target }}
        run: flutter build ${{ matrix.target }}

      - uses: mobile-dev-inc/action-maestro-cloud@v1
        if: matrix.target == 'apk --profile'
        with:
          android-api-level: 34
          api-key: ${{ secrets.MAESTRO_API_KEY }}
          project-id: ${{ secrets.MAESTRO_PROJECT_ID }}
          app-file: build/app/outputs/flutter-apk/app-profile.apk
          include-tags: test

      - name: Upload APK
        if: matrix.target == 'apk --profile'
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: build/app/outputs/flutter-apk/app-profile.apk
          retention-days: 7

  build-test-mac:
    name: Build Test on Mac
    runs-on: macos-latest
    needs: unit-test
    strategy:
      matrix:
        target: [apk --profile]
    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: "temurin"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.unit-test.outputs.flutter-version }}
          cache: true

      - name: Install packages
        run: flutter pub get

      - name: Run build-runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Update local.properties
        run: |
          if [ -f android/local.properties ]; then
            cp android/local.properties android/local.properties.tmp
            grep flutter android/local.properties.tmp > android/local.properties || echo "" > android/local.properties
          else
            echo "" > android/local.properties
          fi
          echo "sdk.dir=$ANDROID_SDK_PATH" >> android/local.properties          

      - name: Configure Keystore
        run: |
          echo "debugStoreFile=keystore/debug_keystore" >> android/key.properties
          echo "debugKeyAlias=$KEYSTORE_KEY_ALIAS" >> android/key.properties
          echo "debugStorePassword=$KEYSTORE_STORE_PASSWORD" >> android/key.properties
          echo "debugKeyPassword=$KEYSTORE_KEY_PASSWORD" >> android/key.properties
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.DEBUG_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.DEBUG_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.DEBUG_KEYSTORE_PASSWORD }}

      - name: Prepare env file
        run: cp .env.dev .env

      - name: Build ${{ matrix.target }}
        run: flutter build ${{ matrix.target }}

      - uses: mobile-dev-inc/action-maestro-cloud@v1
        if: matrix.target == 'apk --profile'
        with:
          android-api-level: 34
          api-key: ${{ secrets.MAESTRO_API_KEY }}
          project-id: ${{ secrets.MAESTRO_PROJECT_ID }}
          app-file: build/app/outputs/flutter-apk/app-profile.apk
          include-tags: test

  ui-tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
      pull-requests: write
      repository-projects: write
    strategy:
      fail-fast: false
      matrix:
        api: [34]
    needs: build-ubuntu

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: ./

      # - name: Run UI Tests with Maestro
      #   uses: ./.github/workflows/actions/maestro_cli
      #   with:
      #     apk-path: "./app-profile.apk"
      #     test-path: ".maestro/test.yaml"
      #     report-name: "e-imunisasi-ui-test-report-api-${{ matrix.api }}"
      #     record: "true"
      #     emulator-api: ${{ matrix.api }}
      #     emulator-profile: "pixel_7_pro"
      #     emulator-ram-size: "4096M"
      #     emulator-heap-size: "1024M"
      #     emulator-disable-animations: false
      - uses: mobile-dev-inc/action-maestro-cloud@v1
        with:
          android-api-level: ${{ matrix.api }}
          api-key: ${{ secrets.MAESTRO_API_KEY }}
          project-id: ${{ secrets.MAESTRO_PROJECT_ID }}
          app-file: "./app-profile.apk"
          include-tags: "test"

      - name: Download Maestro Report
        uses: actions/download-artifact@v4
        if: success() || failure()
        with:
          name: "e-imunisasi-ui-test-report-api-${{ matrix.api }}"
          path: ./

      - name: Test Reporter
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Maestro UI Tests (API ${{ matrix.api }})
          path: "./report.xml"
          reporter: java-junit
          fail-on-error: true

  merge-test-report:
    name: Merge Test Reports
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
      pull-requests: write
      repository-projects: write
    needs: ui-tests
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download all test reports
        uses: actions/download-artifact@v4
        with:
          # Download all artifacts with names starting with 'e-imunisasi-ui-test-report-api-'
          pattern: "e-imunisasi-ui-test-report-api-*"
          path: ./reports
      - name: Install JUnit Report Merger
        run: npm install -g junit-report-merger

      - name: Merge JUnit Reports
        run: |
          mkdir -p merged-reports
          junit-report-merger merged-reports/merged-report.xml 'reports/**/*.xml'

      - name: Publish Merged Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Merged Maestro UI Test Report
          path: ./merged-reports/merged-report.xml
          reporter: java-junit
          fail-on-error: true
